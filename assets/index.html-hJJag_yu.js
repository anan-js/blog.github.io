import{_ as n,e as l,f as i,g as s,h as a,o as e}from"./app-DazCwyn3.js";const t="/blog.github.io/assets/c5e1b0b22b3b4b939569f4c39d9b2e60~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-DVFs8TVy.webp",c="/blog.github.io/assets/07b9c5fd102945378ca19a0052b56a4f~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-BmSU7NvB.webp",r="/blog.github.io/assets/dc3cf1c32c774820b112f12f23c76c6f~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-S87eHZBG.webp",h="/blog.github.io/assets/bcc32a28b53a4465ba9e3f6ca0bd2624~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-CI0iPUgn.webp",o="/blog.github.io/assets/c0f3581574b848408e24391b57bf24c6~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-DftJZqe6.webp",m="/blog.github.io/assets/f843eef9b3064bfc85615a9ff9d43443~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-Chwh9YuS.webp",d="/blog.github.io/assets/042e7e7665d64053810499e8feb8dd3c~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-BS5uKEeR.webp",k="/blog.github.io/assets/f7ec854f921a4953a56cd20991c83956~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-COhjfTVG.webp",u="/blog.github.io/assets/73dee9d5da2c46859573c1f0b62aaf22~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-B5rmB5Oe.webp",b="/blog.github.io/assets/ed35db4d59004fa1ad3208986f766792~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-DkL3pNfP.webp",g="/blog.github.io/assets/11362e30db9344b296fada45e96420e6~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-CJhGwfTv.webp",_="/blog.github.io/assets/8f7d79702ab94eaa9ac2fced34890b34~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-DNstjPW-.webp",v="/blog.github.io/assets/9e6f26da95114b66a1eb96347ccf4ab6~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-DiU-UAhW.webp",f="/blog.github.io/assets/a05e4333aeda48829cc791377217049b~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-CrgBJkcj.webp",y="/blog.github.io/assets/29519009346443d1a50842e3b413e1e8~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-B52sDhYc.webp",A="/blog.github.io/assets/8e58931dabae40398074883fce9547a9~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-B-iK7DxM.webp",x="/blog.github.io/assets/fb30084074224ea2958559368125677d~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-BNXDqtIw.webp",q="/blog.github.io/assets/d9c31435450f49f390762091c90fb688~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-kxP3zrK-.webp",j="/blog.github.io/assets/12ed5de19d3240e0ba9af782c6462db2~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-Dp2BW1Ri.webp",w="/blog.github.io/assets/b1fe972dc8594ce8b241b67e3e4e99d8~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-QQvSIBWD.webp",B="/blog.github.io/assets/46655d54da5e4865bbfc5b2355fcac0b~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-Col0YoZ_.webp",C="/blog.github.io/assets/ebbf118868d24d06b9766f9b1e459d80~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-CDJk2rFF.webp",D="/blog.github.io/assets/c2705b9316eb4ef2a683b5327f989864~tplv-k3u1fbpfcp-jj-mark_1512_0_0_0_q75-Din6Ulk9.webp",M={};function S(N,p){return e(),l("div",null,p[0]||(p[0]=[i('<p>VSCode Debugger 调试的时候需要创建调试配置，默认生成的配置往往不是符合需求的，需要做一些修改。</p><p>比如调试 Vue 项目时，默认生成的调试配置是这样的：</p><p><img src="'+t+'" alt="img"></p><p>而我们最终用的是这样：</p><p><img src="'+c+'" alt="img"></p><p>那能不能像生成默认配置一样，快速生成我们需要的调试配置呢？</p><p>可以的，这需要用到 VSCode 的 Snippets 功能。</p><p>Snippets 是代码片段的意思，输入前缀就可以快速填入代码片段。</p><p><img src="'+r+'" alt="img"></p><p>我们如何自己写一个 Snipppets 呢？</p><p>按住 cmd + shift + p 调出 VSCode 命令面板，输入 snippets，选择 Configure User Snippets：</p><p><img src="'+h+'" alt="img"></p><p>创建一个项目级别的 Snippets：</p><p><img src="'+o+'" alt="img"></p><p>在 .vscode 下就会多出一个 xx.code-snippets 的文件：</p><p><img src="'+m+'" alt="img"></p><p>注释的部分就是 demo 配置，我们把它打开：</p><p><img src="'+d+'" alt="img"></p><ul><li>prefix 就是这个 snippets 生效的前缀</li><li>body 是插入的内容</li><li>description 是描述</li><li>scope 是指定 snippets 生效的语言</li></ul><p>这个 snippets 的作用就是在这个项目目录下的 js、ts 文件里，输入 log 的时候会提示，选中之后就会插入 body 部分的内容。</p><p><img src="'+k+`" alt="img"></p><p>body 部分是待插入的代码，支持很多语法，也是一种 DSL（领域特定语言）。</p><p>支持通过 $1、$2 指定光标位置：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$1</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">xxxx&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;yyyy</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$2</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="img"></p><p>可以多光标同时编辑：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$1</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">xxxx</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$1</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+b+'" alt="img"></p><p>可以加上 placeholader，也可以做默认值：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">${1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">aaa}</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">xxxx&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">,</span></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;yyyy</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">${2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">bbb}</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="'+g+`" alt="img"></p><p>可以提供多个值来选择：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;你好</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${1</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">|光光,东东|</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">}</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+`" alt="img"></p><p>还提供了一些变量可以取：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;当前文件：</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$TM_FILENAME</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;当前日期：</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$CURRENT_YEAR</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$CURRENT_MONTH</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$CURRENT_DATE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+v+'" alt="img"></p><p>所有可用变量可以在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fcode.visualstudio.com%2Fdocs%2Feditor%2Fuserdefinedsnippets%23_variables" target="_blank" rel="noopener noreferrer">VSCode 文档</a>里看到。</p><p>而且还能对变量做正则替换：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">复制代码</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">TM_FILENAME</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">(.</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">)</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">.</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">a-z</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">+</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">${1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">upcase}</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="'+f+'" alt="img"></p><p>一共就这些语法：</p>',42),s("p",{VariableName正则替换的文本:""},[a("指定光标位置："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mtext",null,"多光标编辑：")]),s("annotation",{encoding:"application/x-tex"},"x 多光标编辑：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord cjk_fallback"},"多光标编辑：")])])]),a("x "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mtext",null,"指定"),s("mi",null,"p"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"c"),s("mi",null,"e"),s("mi",null,"h"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r"),s("mtext",null,"文本：")]),s("annotation",{encoding:"application/x-tex"},"x 指定 placeholder 文本：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord cjk_fallback"},"指定"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"pl"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"ce"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord cjk_fallback"},"文本：")])])]),a("{x:placeholder} 指定多选值："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mi",null,"x"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"a"),s("mi",null,"a"),s("mi",null,"a"),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mi",null,"b"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"∣")]),s("mtext",null,"取变量：")]),s("annotation",{encoding:"application/x-tex"},"{x|aaa,bbb|} 取变量：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"aaa"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"bbb"),s("span",{class:"mord"},"∣")]),s("span",{class:"mord cjk_fallback"},"取变量：")])])]),a("VariableName 对变量做转换：$")],-1),i(`<p>综合运用这些语法，就可以实现很多方便的 Snippets。</p><p>比如 React、Vue 的调试配置就可以封装成 Snippets：</p><p>React 项目的调试配置可能是这样的：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;type&quot;:</span><span class="space"> </span><span>&quot;pwa-chrome&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;request&quot;:</span><span class="space"> </span><span>&quot;launch&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;name&quot;:</span><span class="space"> </span><span>&quot;调试</span><span class="space"> </span><span>React</span><span class="space"> </span><span>项目&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;runtimeExecutable&quot;:</span><span class="space"> </span><span>&quot;canary&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;runtimeArgs&quot;:</span><span class="space"> </span><span>[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;--auto-open-devtools-for-tabs&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>],</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;userDataDir&quot;:</span><span class="space"> </span><span>false,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;url&quot;:</span><span class="space"> </span><span>&quot;http://localhost:8080&quot;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&quot;webRoot&quot;:</span><span class="space"> </span><span>&quot;\${workspaceFolder}&quot;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们把它做成 snippets 需要把这段内容变为字符串拼接的方式放在 body 里，这个还是挺麻烦的。</p><p>不过有<a href="https://link.juejin.cn/?target=https%3A%2F%2Fsnippet-generator.app%2F" target="_blank" rel="noopener noreferrer">工具网站 snippet-generator.app </a>来做这件事情，只需要把内容贴在左边，那么在右边就会展示变为 snippets 之后的配置。</p><p><img src="`+y+'" alt="img"></p><p>把它复制出来然后再做一些修改：</p><p><img src="'+A+'" alt="img"></p><p>注意 ${workspaceFolder} 这部分和 snippets 的语法有冲突，所以需要加上个 \\ 来转义。</p><p>scope 指定为 json 和 jsonc，这是因为 json 文件对应两种语言：</p><p>jsonc 是 json with comments，带注释的 json，因为 json 语法是不支持注释的，而我们又想在 json 文件里加一些注释，所以平时都是用 jsonc 的类型。</p><p>点击右下角的语言部分：</p><p><img src="'+x+'" alt="img"></p><p>可以切换文件的语言：</p><p><img src="'+q+'" alt="img"></p><p>会发现 json 文件对应两种语言，所以这里 scope 都要填上。</p><p>这样创建 React 调试配置的时候就方便了。</p><p><img src="'+j+'" alt="img"></p><p>上面的 snippets 还可以进一步优化，比如端口的部分可以指定光标输入，默认是 8080：</p><p><img src="'+w+'" alt="img"></p><p>这样在创建调试配置的时候能顺便把端口也改了：</p><p><img src="'+B+'" alt="img"></p><p>当然，前面提到的 snippets 的语法都可以用起来，封装适合自己的创建调试配置的 snippets。</p><p>现在还有一个问题，我们创建的 snippets 是保存在 .vscode 目录下的，只有当前项目生效，怎么能让别的项目也能用呢？</p><p>其实 snippets 一共三种范围：</p><p><img src="'+C+'" alt="img"></p><p><img src="'+D+'" alt="img"></p><p>全局级别是全局生效的，项目级别只在当前项目生效，语言级别是某种语言的文件里生效。</p><p>把这段创建调试配置的 snippets 放到全局 snippets，那样就每个项目都能用了。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>为了快速创建符合需求的调试配置，我们可以把它们封装成 snippets。</p><p>snippets 是根据前缀快速填入一段代码片段的。</p><p>有这些语法：</p>',34),s("p",{VariableName正则替换的文本:""},[a("指定光标位置："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mtext",null,"多光标编辑：")]),s("annotation",{encoding:"application/x-tex"},"x 多光标编辑：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord cjk_fallback"},"多光标编辑：")])])]),a("x "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mtext",null,"指定"),s("mi",null,"p"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"c"),s("mi",null,"e"),s("mi",null,"h"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"r"),s("mtext",null,"文本：")]),s("annotation",{encoding:"application/x-tex"},"x 指定 placeholder 文本：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord cjk_fallback"},"指定"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"pl"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"ce"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord cjk_fallback"},"文本：")])])]),a("{x:placeholder} 指定多选值："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mi",null,"x"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"a"),s("mi",null,"a"),s("mi",null,"a"),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mi",null,"b"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"∣")]),s("mtext",null,"取变量：")]),s("annotation",{encoding:"application/x-tex"},"{x|aaa,bbb|} 取变量：")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"aaa"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"bbb"),s("span",{class:"mord"},"∣")]),s("span",{class:"mord cjk_fallback"},"取变量：")])])]),a("VariableName 对变量做转换：$")],-1),s("p",null,"snippets 有项目、语言、全局三种生效范围，调试配置一般是要做成全局的 snippets。",-1),s("p",null,"我们可以把符合需求的调试配置封装成 snippets，这样之后再创建调试配置就方便多了。",-1)]))}const V=n(M,[["render",S],["__file","index.html.vue"]]),F=JSON.parse('{"path":"/article/qem3mwhx/","title":"vscode_snippets","lang":"zh-CN","frontmatter":{"title":"vscode_snippets","createTime":"2024/10/03 22:38:17","permalink":"/article/qem3mwhx/","tags":["快捷"]},"headers":[],"readingTime":{"minutes":4.57,"words":1370},"git":{"updatedTime":1742544334000,"contributors":[{"name":"hello-xiaowu","username":"hello-xiaowu","email":"mvr46tx2fw@privaterelay.appleid.com","commits":5,"avatar":"https://avatars.githubusercontent.com/hello-xiaowu?v=4","url":"https://github.com/hello-xiaowu"}]},"filePathRelative":"docs/VSCode_snippets.md","categoryList":[{"id":"e3e2a9","sort":10000,"name":"docs"}]}');export{V as comp,F as data};

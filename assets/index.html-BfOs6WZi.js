import{_ as a,e as n,f as p,o as l}from"./app-DazCwyn3.js";const e="/blog.github.io/assets/1723020307783-af007748-bb10-46aa-9b7d-8b2817483955-5g1AmdAE.png",c="/blog.github.io/assets/1723020386733-79dcd839-0d75-457a-9143-71a817aae33a-CqHSMGdW.png",i="/blog.github.io/assets/1723020403242-6e879219-dcd0-43e4-9c63-c899823084af-BTzova70.png",t="/blog.github.io/assets/1723020423621-38875c7e-dae0-4c7d-9b42-4c30c63138b0-Bk5Ptnkg.png",d="/blog.github.io/assets/1723020451231-c6f3a489-f4f9-49ad-a8fc-de4b62849ded-2TLvKrq6.png",v="/blog.github.io/assets/1723020734200-dd219a48-789f-4fa8-ab7c-038434d6e5c5-sP2azQBH.png",r="/blog.github.io/assets/1723020771795-025e5359-169d-4d57-a1b2-6e5304f96129-CosIb7Or.png",u={};function m(o,s){return l(),n("div",null,s[0]||(s[0]=[p(`<p>在开发 Vue 项目中我们一般使用第三方 UI 组件库进行开发，如 <code>Element-Plus</code>, 但是这些组件库提供的组件并不一定满足我们的需求，这时我们可以通过对组件库的组件进行二次封装，来满足我们特殊的需求。</p><p>对于封装组件有一个大原则就是我们应该尽量保持原有组件的接口，除了我们需要封装的功能外，我们不应该改变原有组件的接口，<strong>即保持原有组件提供的接口（属性、方法、事件）不变</strong>。</p><h2 id="一、保持原有组件的接口" tabindex="-1"><a class="header-anchor" href="#一、保持原有组件的接口"><span>一、保持原有组件的接口</span></a></h2><p>这里我们对 Element-plus 的 input 组件进行简单的二次封装，封装一个 MyInput 组件，代码的结构如下：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">引入组件进行使用</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyInput</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyInput</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">MyInput.vue</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">my-input</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">el-input</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">el-input</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">div</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-继承第三方组件的-attributes-属性" tabindex="-1"><a class="header-anchor" href="#_1-继承第三方组件的-attributes-属性"><span>1. 继承第三方组件的 Attributes 属性</span></a></h3><p>如果我们往 MyInput 组件传入一些属性，并且想要将这些属性传给 el-input，最简单的方式就是在组件中一个个的去定义 <code>props</code>，然后再传给 el-input，但是这种方法非常麻烦，毕竟 <code>el-input</code> 就有二十几个属性（<code>Attributes</code>）</p><p><img src="`+e+`" alt="img"></p><p>这个时候可以使用 <code>$attrs</code>（属性透传）去解决这个问题，先来看下 Vue 官方文档对 <code>$attrs</code> 的解释：包含了父作用域中不作为组件 props 或自定义事件的 attribute 绑定和事件；当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定，并且可以通过 v-bind=&quot;$attrs&quot; 传入内部的 UI 组件中——这在创建高阶的组件时会非常有用。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;MyInput</span><span class="space"> </span><span>:size=&quot;inputSize&quot;</span><span class="space"> </span><span>:name=&quot;userName&quot;</span><span class="space"> </span><span>:clearable=&quot;clearable&quot;</span><span class="space"> </span><span>&gt;&lt;/MyInput&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-input&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-bind=&quot;filteredAttrs&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>如果不希望过滤掉某些属性</span><span class="space"> </span><span>可以直接使用</span><span class="space"> </span><span>$attrs</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-bind=&quot;$attrs&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;script</span><span class="space"> </span><span>lang=&quot;ts&quot;</span><span class="space"> </span><span>setup&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>import</span><span class="space"> </span><span>{useAttrs,computed,ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ElInput</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;element-plus&#39;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>defineOptions({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>&#39;MyInput&#39;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>接收</span><span class="space"> </span><span>name，其余属性都会被透传给</span><span class="space"> </span><span>el-input</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>String</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>如果我们不希望透传某些属性比如class,</span><span class="space"> </span><span>我们可以通过useAttrs来实现</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>const</span><span class="space"> </span><span>attrs</span><span class="space"> </span><span>=</span><span class="space"> </span><span>useAttrs()</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>const</span><span class="space"> </span><span>filteredAttrs</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>{</span><span class="space"> </span><span>...attrs,</span><span class="space"> </span><span>class:</span><span class="space"> </span><span>undefined</span><span class="space"> </span><span>};</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 props，最好用对象的写法，这样可以针对每个属性设置类型、默认值或自定义校验属性的值，此外还可以通过 type、validator 等方式对输入进行验证</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">props</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">viewport</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">typeof</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!==</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">undefined</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">HTMLElement</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Object</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span class="space"> </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">PropType</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">HTMLElement</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=&gt;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">threshold</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0px</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">direction</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vertical</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">validator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">v</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=&gt;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vertical</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">horizontal</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">].</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">includes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">v</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们再来聊下 <code>inheritAttrs</code> 属性：默认情况下，父组件传递的，但没有被子组件解析为 props 的 attributes 绑定会被 “透传”。这意味着当我们有一个单根节点的子组件时，这些绑定会被作为一个常规的 HTML attribute 应用在子组件的根节点元素上，当你编写的组件想要在一个目标元素或其他组件外面包一层时，可能并不期望这样的行为。</p><p>我们可以通过设置 <code>inheritAttrs</code> 为 <code>false</code> 来禁用这个默认行为。这些 attributes 可以通过 <code>$attrs</code> 这个实例属性来访问，并且可以通过 <code>v-bind</code> 来显式绑定在一个非根节点的元素上。 下面来看一个具体的例子：</p><p>父组件：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;TestCom</span><span class="space"> </span><span>title=&quot;父组件给的标题&quot;</span><span class="space"> </span><span>aa=&quot;我是aa&quot;</span><span class="space"> </span><span>bb=&quot;我是bb&quot;&gt;&lt;/TestCom&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>import</span><span class="space"> </span><span>TestCom</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&quot;../../components/TestCom.vue&quot;</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子组件：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;root-son&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;p&gt;我是p标签&lt;/p&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;span&gt;我是span&lt;/span&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="img"></p><p>因为在默认情况下，父组件的属性会直接渲染在子组件的根节点上，但是有些情况我们希望是渲染在指定的节点上，那怎么处理这问题呢？使用 <code>$attrs</code> 和 <code>inheritAttrs: false</code> 就可以完美的解决这个问题。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;root-son&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;p</span><span class="space"> </span><span>v-bind=&quot;$attrs&quot;&gt;我是p标签&lt;/p&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;span&gt;我是span&lt;/span&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;script</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>export</span><span class="space"> </span><span>default</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>inheritAttrs:</span><span class="space"> </span><span>false,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+'" alt="img"></p><h3 id="_2-继承第三方组件的-event-事件" tabindex="-1"><a class="header-anchor" href="#_2-继承第三方组件的-event-事件"><span>2. 继承第三方组件的 Event 事件</span></a></h3><p>跟上面的属性传递一样，如果我们往 MyInput 组件传入一些事件，并且想要将这些事件传给 el-input，这里需要用到 <code>$listeners</code></p><p><img src="'+t+`" alt="img"></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;MyInput</span><span class="space"> </span><span>@change=&quot;change&quot;</span><span class="space"> </span><span>@focus=&quot;focus&quot;</span><span class="space"> </span><span>@input=&quot;input&quot;&gt;&lt;/MyInput&gt;</span></span>
<span class="line"><span>//</span><span class="space"> </span><span>Vue2</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-input&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-bind=&quot;$attrs&quot;</span><span class="space"> </span><span>v-on=&quot;$listeners&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>Vue3</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-input&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>在</span><span class="space"> </span><span>Vue3</span><span class="space"> </span><span>中，取消了$listeners这个组件实例的属性，将其事件的监听都整合到了$attrs上</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>因此直接通过v-bind=$attrs属性就可以进行props属性和event事件的透传</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-bind=&quot;$attrs&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用第三方组件的-slots" tabindex="-1"><a class="header-anchor" href="#_3-使用第三方组件的-slots"><span>3. 使用第三方组件的 Slots</span></a></h3><p>插槽也是一样的道理，比如 <code>el-input</code> 就有4个 Slot，我们不应该在组件中一个个的去手动添加 <code>&lt;slot name=&quot;prefix&quot;&gt;</code>，因此需要使用 <code>$slots</code></p><p><img src="`+d+`" alt="img"></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;MyInput</span><span class="space"> </span><span>:placeholder=&quot;inputPlaceholder&quot;</span><span class="space"> </span><span>@input=&quot;inputHandle&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template</span><span class="space"> </span><span>#prepend&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-select</span><span class="space"> </span><span>v-model=&quot;select&quot;</span><span class="space"> </span><span>placeholder=&quot;请选择&quot;</span><span class="space"> </span><span>style=&quot;width:</span><span class="space"> </span><span>115px&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-option</span><span class="space"> </span><span>label=&quot;HTTPS&quot;</span><span class="space"> </span><span>value=&quot;1&quot;</span><span class="space"> </span><span>/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-option</span><span class="space"> </span><span>label=&quot;HTTP&quot;</span><span class="space"> </span><span>value=&quot;2&quot;</span><span class="space"> </span><span>/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/el-select&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template</span><span class="space"> </span><span>#append&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-button</span><span class="space"> </span><span>:icon=&quot;Search&quot;</span><span class="space"> </span><span>/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/MyInput&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Vue2 中，需要用到 <code>$slots</code>（插槽） 和 <code>$scopedSlots</code>（作用域插槽）：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-input&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-model=&quot;childSelectedValue&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-bind=&quot;attrs&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-on=&quot;$listeners&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>遍历子组件非作用域插槽，并对父组件暴露</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template</span><span class="space"> </span><span>v-for=&quot;(index,</span><span class="space"> </span><span>name)</span><span class="space"> </span><span>in</span><span class="space"> </span><span>$slots&quot;</span><span class="space"> </span><span>v-slot:[name]&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;slot</span><span class="space"> </span><span>:name=&quot;name&quot;</span><span class="space"> </span><span>/&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>遍历子组件作用域插槽，并对父组件暴露</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template</span><span class="space"> </span><span>v-for=&quot;(index,</span><span class="space"> </span><span>name)</span><span class="space"> </span><span>in</span><span class="space"> </span><span>$scopedSlots&quot;</span><span class="space"> </span><span>v-slot:[name]=&quot;data&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;slot</span><span class="space"> </span><span>:name=&quot;name&quot;</span><span class="space"> </span><span>v-bind=&quot;data&quot;&gt;&lt;/slot&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Vue3 中，取消了作用域插槽 <code>$scopedSlots</code>，将所有插槽都统一在 <code>$slots</code> 当中：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-input&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-model=&quot;childSelectedValue&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-bind=&quot;attrs&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>v-on=&quot;$listeners&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;template</span><span class="space"> </span><span>#[slotName]=&quot;slotProps&quot;</span><span class="space"> </span><span>v-for=&quot;(slot,</span><span class="space"> </span><span>slotName)</span><span class="space"> </span><span>in</span><span class="space"> </span><span>$slots&quot;</span><span class="space"> </span><span>&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;slot</span><span class="space"> </span><span>:name=&quot;slotName&quot;</span><span class="space"> </span><span>v-bind=&quot;slotProps&quot;&gt;&lt;/slot&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用第三方组件的methods" tabindex="-1"><a class="header-anchor" href="#_4-使用第三方组件的methods"><span>4. 使用第三方组件的Methods</span></a></h3><p>有些时候我们想要使用组件的一些方法，比如 <code>el-table</code> 提供9个方法，如何在父组件（也就是封装的组件）中使用这些方法呢？其实可以通过 ref 链式调用，比如 <code>this.$refs.tableRef.$refs.table.clearSort()</code>，但是这样太麻烦了，代码的可读性差；更好的解决方法：将所有的方法暴露出来，供父组件通过 ref 调用！</p><p><img src="`+v+`" alt="img"></p><p>在 Vue2 中，可以将 <code>el-table</code> 提供方法提取到实例上：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-table&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-table</span><span class="space"> </span><span>ref=&quot;el-table&quot;&gt;&lt;/el-table&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;Script&gt;</span></span>
<span class="line"><span>export</span><span class="space"> </span><span>default</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>mounted()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>this.extendMethod()</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>methods:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>extendMethod()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>const</span><span class="space"> </span><span>refMethod</span><span class="space"> </span><span>=</span><span class="space"> </span><span>Object.entries(this.$refs[&#39;el-table&#39;])</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>for</span><span class="space"> </span><span>(const</span><span class="space"> </span><span>[key,</span><span class="space"> </span><span>value]</span><span class="space"> </span><span>of</span><span class="space"> </span><span>refMethod)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>if</span><span class="space"> </span><span>(!(key.includes(&#39;$&#39;)</span><span class="space"> </span><span>||</span><span class="space"> </span><span>key.includes(&#39;_&#39;)))</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>this[key]</span><span class="space"> </span><span>=</span><span class="space"> </span><span>value</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/Script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="img"></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;MyTable</span><span class="space"> </span><span>ref=&quot;tableRef&quot;&gt;&lt;/MyTable&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;Script&gt;</span></span>
<span class="line"><span>export</span><span class="space"> </span><span>default</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>mounted()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>console.log(this.$refs.tableRef.clearSort())</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span>&lt;/Script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Vue3 中的使用方法如下：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>class=&quot;my-table&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;el-table</span><span class="space"> </span><span>ref=&quot;table&quot;&gt;&lt;/el-table&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>lang=&quot;ts&quot;</span><span class="space"> </span><span>setup&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref,</span><span class="space"> </span><span>onMounted</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ElTable</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;element-plus&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>table</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>onMounted(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>const</span><span class="space"> </span><span>entries</span><span class="space"> </span><span>=</span><span class="space"> </span><span>Object.entries(table.value);</span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>for</span><span class="space"> </span><span>(const</span><span class="space"> </span><span>[method,</span><span class="space"> </span><span>fn]</span><span class="space"> </span><span>of</span><span class="space"> </span><span>entries)</span><span class="space"> </span><span>{</span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>expose[method]</span><span class="space"> </span><span>=</span><span class="space"> </span><span>fn;</span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span></span>
<span class="line"><span>});</span><span class="space"> </span></span>
<span class="line"><span>defineExpose(expose);</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;MyTable</span><span class="space"> </span><span>ref=&quot;tableRef&quot;&gt;&lt;/MyInput&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>lang=&quot;ts&quot;</span><span class="space"> </span><span>setup&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref,onMounted</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>tableRef</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>onMounted(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>console.log(tableRef.value);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>调用子组件中table的方法</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>tableRef.value.clearSort()</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、v-model-实现双向绑定" tabindex="-1"><a class="header-anchor" href="#二、v-model-实现双向绑定"><span>二、v-model 实现双向绑定</span></a></h2><p>我们在封装组件的时候，难免会用到一些表单组件，需要使用 v-model，这个时候可能会遇到一系列的问题，为了更好的解决可能会出现的问题，我们有必要先来了解下关于 v-model 的知识。</p><h3 id="_1-v-model在vue2和vue3中的区别" tabindex="-1"><a class="header-anchor" href="#_1-v-model在vue2和vue3中的区别"><span>1. v-model在Vue2和Vue3中的区别</span></a></h3><p><code>v-model</code> 本质上是一个绑定属性和事件的语法糖，在 Vue2 和 Vue3 中是有一定的区别的，这里只简单介绍下，想了解更多的内容请查阅相关资料！</p><p>在 Vue2 中：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;div&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;input</span><span class="space"> </span><span>type=&quot;text&quot;</span><span class="space"> </span><span>:value=&quot;value&quot;</span><span class="space"> </span><span>@input=&quot;$emit(&#39;input&#39;,</span><span class="space"> </span><span>$event.target.value)&quot;&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>export</span><span class="space"> </span><span>default</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>props:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>value:</span><span class="space"> </span><span>String,</span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>默认接收一个名为</span><span class="space"> </span><span>value</span><span class="space"> </span><span>的</span><span class="space"> </span><span>prop</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>//</span><span class="space"> </span><span>等同于</span></span>
<span class="line"><span>&lt;my-input</span><span class="space"> </span><span>:value=&quot;msg&quot;</span><span class="space"> </span><span>@input=&quot;msg</span><span class="space"> </span><span>=</span><span class="space"> </span><span>$event&quot;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Vue3 中：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;!--</span><span class="space"> </span><span>等同于</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>:modelValue=&quot;msg&quot;</span><span class="space"> </span><span>@update:modelValue=&quot;msg</span><span class="space"> </span><span>=</span><span class="space"> </span><span>$event&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>msg</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref(&#39;hello&#39;)</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>:modelValue=&quot;modelValue&quot;</span><span class="space"> </span><span>@update:modelValue=&quot;handleValueChange&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>String,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>handleValueChange</span><span class="space"> </span><span>=</span><span class="space"> </span><span>(value)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>value)</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-避免违背vue的单向数据流" tabindex="-1"><a class="header-anchor" href="#_2-避免违背vue的单向数据流"><span>2. 避免违背Vue的单向数据流</span></a></h3><p>我们来看下面的情况，父组件和子组件中都使用了 v-model，并且绑定的是同一个变量，这个时候就会出问题了，因为子组件直接更改了父组件的数据，违背了单向数据流，这样会导致如果出现数据问题不好调试，无法定位出现问题的根源。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>msg:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>String,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么有没有方法解决呢？我这里提供了两种解决方法，这里均以 Vue3 的写法为主</p><p>第一种是：<code>将 v-model 拆开，通过 emit 让父组件去修改数据</code></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>msg</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref(&#39;hello&#39;)</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>:modelValue=&quot;modelValue&quot;</span><span class="space"> </span><span>@update:modelValue=&quot;handleValueChange&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>String,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>handleValueChange</span><span class="space"> </span><span>=</span><span class="space"> </span><span>(value)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>value)</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种方法：<code>使用计算属性的 get set 方法</code></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;msg&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>msg</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref(&#39;hello&#39;)</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;inputVal&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>computed</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>String,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>inputVal</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>props.modelValue</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>val)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用多个v-model绑定对象属性" tabindex="-1"><a class="header-anchor" href="#_3-使用多个v-model绑定对象属性"><span>3. 使用多个v-model绑定对象属性</span></a></h3><p>现在看起来是没有什么问题，但是如果子组件中有多个表单项（如下面的例子所示），不管是上面哪种方法，都要写很多重复的代码，所以我们需要去寻找解决的办法。</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;formList&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>formList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>text:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>password:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>&#39;&#39;</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;name&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;text&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;password&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>computed</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>Object,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>name</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>props.modelValue.name</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>...props.modelValue,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>val</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>text</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>props.modelValue.text</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>...props.modelValue,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>text:</span><span class="space"> </span><span>val</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>password</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>props.modelValue.password</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>...props.modelValue,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>password:</span><span class="space"> </span><span>val</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面使用计算属性监听单个属性，所以需要每个属性都写一遍，我们可以考虑在计算属性中监听整个对象：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;formList&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>formList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>text:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>password:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>&#39;&#39;</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.name&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.text&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.password&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>computed</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>Object,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>modelList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>props.modelValue</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>val)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样看起来没什么问题，读取属性的时候能正常调用 get，但是设置属性的时候却无法触发 set，原因是 <code>modelList.value = xxx</code>，才会触发 set，而 <code>modelList.value.name = xxx</code>，无法触发。这个时候，<code>Proxy</code> 代理对象可以完美的解决这个问题：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;formList&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>formList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>text:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>password:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>&#39;&#39;</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.name&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.text&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.password&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>computed</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>Object,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>modelList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>computed(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>get()</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>new</span><span class="space"> </span><span>Proxy(props.modelValue,</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>get(target,</span><span class="space"> </span><span>key)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>Reflect.get(target,</span><span class="space"> </span><span>key)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>set(target,</span><span class="space"> </span><span>key,</span><span class="space"> </span><span>value)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>...target,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>[key]:</span><span class="space"> </span><span>value</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>true</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>set(val)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>emit(&#39;update:modelValue&#39;,</span><span class="space"> </span><span>val)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在已经能够把上面的问题都解决了，我们还可以考虑把这段代码进行封装，可以在多处引入进行使用： <code>useVModel.ts</code>，其实 vueuse 里面有提供了这么一个方法，基本的逻辑是一样的</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">useVModel</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">props</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">propsName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">emit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">return</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">computed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=&gt;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">return</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">new</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Proxy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">props</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">propsName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">target</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">return</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Reflect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">target</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">target</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">emit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">update:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">propsName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">target</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]:</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">return</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">set</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">emit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">update:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">propsName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在刚刚的例子中引入使用即可：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;!--</span><span class="space"> </span><span>父组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;my-input</span><span class="space"> </span><span>v-model=&quot;formList&quot;&gt;&lt;/my-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>ref</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>formList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>text:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>password:</span><span class="space"> </span><span>&#39;&#39;,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>name:</span><span class="space"> </span><span>&#39;&#39;</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!--</span><span class="space"> </span><span>子组件</span><span class="space"> </span><span>--&gt;</span></span>
<span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.name&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.text&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;el-input</span><span class="space"> </span><span>v-model=&quot;modelList.password&quot;&gt;&lt;/el-input&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script</span><span class="space"> </span><span>setup</span><span class="space"> </span><span>lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>computed</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;vue&#39;;</span></span>
<span class="line"><span>import</span><span class="space"> </span><span>{</span><span class="space"> </span><span>useVModel</span><span class="space"> </span><span>}</span><span class="space"> </span><span>from</span><span class="space"> </span><span>&#39;./useVModel.ts&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>props</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineProps({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>modelValue:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>type:</span><span class="space"> </span><span>Object,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>default:</span><span class="space"> </span><span>()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>emit</span><span class="space"> </span><span>=</span><span class="space"> </span><span>defineEmits([&#39;update:modelValue&#39;]);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const</span><span class="space"> </span><span>modelList</span><span class="space"> </span><span>=</span><span class="space"> </span><span>useVModel(props,</span><span class="space"> </span><span>&#39;modelValue&#39;,</span><span class="space"> </span><span>emit)</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,70)]))}const b=a(u,[["render",m],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/article/p8lw30zx/","title":"vue组件封装技巧","lang":"zh-CN","frontmatter":{"title":"vue组件封装技巧","createTime":"2023/03/02 15:03:04","permalink":"/article/p8lw30zx/","tags":["vue"]},"headers":[],"readingTime":{"minutes":10.47,"words":3141},"git":{"updatedTime":1742544334000,"contributors":[{"name":"hello-xiaowu","username":"hello-xiaowu","email":"mvr46tx2fw@privaterelay.appleid.com","commits":4,"avatar":"https://avatars.githubusercontent.com/hello-xiaowu?v=4","url":"https://github.com/hello-xiaowu"}]},"filePathRelative":"docs/vue_encapsulation_com.md","categoryList":[{"id":"e3e2a9","sort":10000,"name":"docs"}]}');export{b as comp,k as data};

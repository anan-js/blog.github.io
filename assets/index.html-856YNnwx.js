import{_ as a,e as p,f as n,o as c}from"./app-DazCwyn3.js";const e="/blog.github.io/assets/1719821544649-894bda4c-379c-4923-a4d4-28177a7e472c-BjdGpkpJ.png",l="/blog.github.io/assets/1719821642594-ada23f71-b122-4967-a5b5-6df12626bccc-CknRXwB_.png",i="/blog.github.io/assets/1719821651852-7f8cfb20-14bf-456a-bc63-5e5c7bce1f1c-C_aUX7vi.png",d="/blog.github.io/assets/1719823714733-992a981a-73e6-42e9-9553-00c3f545debb-CB7rGsz4.png",t="/blog.github.io/assets/1719824435982-b40e99ff-1098-4da4-9961-2df9830e18fb-CdSVxYUK.png",r={};function o(v,s){return c(),p("div",null,s[0]||(s[0]=[n(`<p>单体节点部署</p><p>①单体结构的部署方式无法承载日益增长的业务流量。</p><p>②当后端节点宕机后，整个系统会陷入瘫痪，导致整个项目不可用。</p><h3 id="nginx反向代理-负载均衡" tabindex="-1"><a class="header-anchor" href="#nginx反向代理-负载均衡"><span><strong>Nginx反向代理-负载均衡</strong></span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>@Controller</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>public</span><span class="space"> </span><span>class</span><span class="space"> </span><span>IndexNginxController</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>@Value(&quot;\${server.port}&quot;)</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>private</span><span class="space"> </span><span>String</span><span class="space"> </span><span>port;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>@RequestMapping(&quot;/&quot;)</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>public</span><span class="space"> </span><span>ModelAndView</span><span class="space"> </span><span>index(){</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>ModelAndView</span><span class="space"> </span><span>model</span><span class="space"> </span><span>=</span><span class="space"> </span><span>new</span><span class="space"> </span><span>ModelAndView();</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>model.addObject(&quot;port&quot;,</span><span class="space"> </span><span>port);</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>model.setViewName(&quot;index&quot;);</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>model;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在该Controller类中，存在一个成员变量：port，它的值即是从application.properties配置文件中获取server.port值。当出现访问/资源的请求时，跳转前端index页面，并将该值携带返回。</p><p>前端的index.ftl文件代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;html&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;head&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;title&gt;Nginx演示页面&lt;/title&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;link</span><span class="space"> </span><span>href=&quot;nginx_style.css&quot;</span><span class="space"> </span><span>rel=&quot;stylesheet&quot;</span><span class="space"> </span><span>type=&quot;text/css&quot;/&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/head&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;body&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span>style=&quot;border:</span><span class="space"> </span><span>2px</span><span class="space"> </span><span>solid</span><span class="space"> </span><span>red;margin:</span><span class="space"> </span><span>auto;width:</span><span class="space"> </span><span>800px;text-align:</span><span class="space"> </span><span>center&quot;&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;div</span><span class="space"> </span><span class="space"> </span><span>id=&quot;nginx_title&quot;&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;h1&gt;欢迎来到</span><span class="space"> </span><span>\${port}号！&lt;/h1&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>&lt;/div&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>&lt;/body&gt;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>&lt;/html&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>nginx.conf的配置即可：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>upstream</span><span class="space"> </span><span>nginx_boot{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>30s内检查心跳发送两次包，未回复就代表该机器宕机，请求分发权重比为1:2</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>server</span><span class="space"> </span><span>192.168.0.000:8080</span><span class="space"> </span><span>weight=100</span><span class="space"> </span><span>max_fails=2</span><span class="space"> </span><span>fail_timeout=30s;</span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>server</span><span class="space"> </span><span>192.168.0.000:8090</span><span class="space"> </span><span>weight=200</span><span class="space"> </span><span>max_fails=2</span><span class="space"> </span><span>fail_timeout=30s;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>这里的IP请配置成你WEB服务所在的机器IP</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span></span></span>
<span class="line"><span>server</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>location</span><span class="space"> </span><span>/</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>root</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>html;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>配置一下index的地址，最后加上index.ftl。</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>index</span><span class="space"> </span><span class="space"> </span><span>index.html</span><span class="space"> </span><span>index.htm</span><span class="space"> </span><span>index.jsp</span><span class="space"> </span><span>index.ftl;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_set_header</span><span class="space"> </span><span>Host</span><span class="space"> </span><span>$host;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_set_header</span><span class="space"> </span><span>X-Real-IP</span><span class="space"> </span><span>$remote_addr;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_set_header</span><span class="space"> </span><span>X-Forwarded-For</span><span class="space"> </span><span>$proxy_add_x_forwarded_for;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>请求交给名为nginx_boot的upstream上</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_pass</span><span class="space"> </span><span>http://nginx_boot;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="nginx请求分发原理" tabindex="-1"><a class="header-anchor" href="#nginx请求分发原理"><span><strong>Nginx请求分发原理</strong></span></a></h5><p>客户端发出的请求192.168.12.129最终会转变为：http://192.168.12.129:80/，然后再向目标IP发起请求，流程如下：</p><p><img src="`+e+'" alt="img"></p><ul><li>由于Nginx监听了192.168.12.129的80端口，所以最终该请求会找到Nginx进程；</li><li>Nginx首先会根据配置的location规则进行匹配，根据客户端的请求路径/，会定位到location /{}规则；</li><li>然后根据该location中配置的proxy_pass会再找到名为nginx_boot的upstream；</li><li>最后根据upstream中的配置信息，将请求转发到运行WEB服务的机器处理，由于配置了多个WEB服务，且配置了权重值，因此Nginx会依次根据权重比分发请求。</li></ul><h3 id="nginx动静分离" tabindex="-1"><a class="header-anchor" href="#nginx动静分离"><span><strong>Nginx动静分离</strong></span></a></h3><p>动静分离应该是听的次数较多的性能优化方案，那先思考一个问题：<strong>「「为什么需要做动静分离呢？它带来的好处是什么？」」</strong> 其实这个问题也并不难回答，当你搞懂了网站的本质后，自然就理解了动静分离的重要性</p><p><img src="'+l+'" alt="img"></p><p>当浏览器输入www.taobao.com访问淘宝首页时，打开开发者调试工具可以很明显的看到，首页加载会出现100+的请求数，而正常项目开发时，静态资源一般会放入到resources/static/目录下：</p><p><img src="'+i+`" alt="img"></p><p>在项目上线部署时，这些静态资源会一起打成包，那此时思考一个问题：<strong>「「假设淘宝也是这样干的，那么首页加载时的请求最终会去到哪儿被处理？」」</strong> 答案毋庸置疑，首页100+的所有请求都会来到部署WEB服务的机器处理，那则代表着一个客户端请求淘宝首页，就会对后端服务器造成100+的并发请求。毫无疑问，这对于后端服务器的压力是尤为巨大的。</p><p>首页100+的请求中，是不是至少有60+是属于*.js、<em>.css、</em>.html、*.jpg.....这类静态资源的请求呢？答案是Yes。</p><p>既然有这么多请求属于静态的，这些资源大概率情况下，长时间也不会出现变动，那为何还要让这些请求到后端再处理呢？能不能在此之前就提前处理掉？当然OK，因此经过分析之后能够明确一点：<strong>「「做了动静分离之后，至少能够让后端服务减少一半以上的并发量。」」</strong> 到此时大家应该明白了动静分离能够带来的性能收益究竟有多大。</p><p>①先在部署Nginx的机器，Nginx目录下创建一个目录static_resources：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">static_resources</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>②将项目中所有的静态资源全部拷贝到该目录下，而后将项目中的静态资源移除重新打包。</p><p>③稍微修改一下nginx.conf的配置，增加一条location匹配规则：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>location</span><span class="space"> </span><span>~</span><span class="space"> </span><span>.*\\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css){</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>root</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>/soft/nginx/static_resources;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>expires</span><span class="space"> </span><span>7d;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后解读一下那条location规则</p><ul><li>~代表匹配时区分大小写</li><li>.*代表任意字符都可以出现零次或多次，即资源名不限制</li><li>.代表匹配后缀分隔符.</li><li>(html|...|css)代表匹配括号里所有静态资源类型</li></ul><h3 id="nginx资源压缩" tabindex="-1"><a class="header-anchor" href="#nginx资源压缩"><span><strong>Nginx资源压缩</strong></span></a></h3><p>建立在动静分离的基础之上，如果一个静态资源的Size越小，那么自然传输速度会更快，同时也会更节省带宽，因此我们在部署项目时，也可以通过Nginx对于静态资源实现压缩传输，一方面可以节省带宽资源，第二方面也可以加快响应速度并提升系统整体吞吐。</p><p>在Nginx也提供了三个支持资源压缩的模块ngx_http_gzip_module、ngx_http_gzip_static_module、ngx_http_gunzip_module，其中ngx_http_gzip_module属于内置模块，代表着可以直接使用该模块下的一些压缩指令</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>http{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>开启压缩机制</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip</span><span class="space"> </span><span>on;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>指定会被压缩的文件类型(也可自己配置其他类型)</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_types</span><span class="space"> </span><span>text/plain</span><span class="space"> </span><span>application/javascript</span><span class="space"> </span><span>text/css</span><span class="space"> </span><span>application/xml</span><span class="space"> </span><span>text/javascript</span><span class="space"> </span><span>image/jpeg</span><span class="space"> </span><span>image/gif</span><span class="space"> </span><span>image/png;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>设置压缩级别，越高资源消耗越大，但压缩效果越好</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_comp_level</span><span class="space"> </span><span>5;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>在头部中添加Vary:</span><span class="space"> </span><span>Accept-Encoding（建议开启）</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_vary</span><span class="space"> </span><span>on;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>处理压缩请求的缓冲区数量和大小</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_buffers</span><span class="space"> </span><span>16</span><span class="space"> </span><span>8k;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>对于不支持压缩功能的客户端请求不开启压缩机制</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_disable</span><span class="space"> </span><span>&quot;MSIE</span><span class="space"> </span><span>[1-6]\\.&quot;;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>低版本的IE浏览器不支持压缩</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>设置压缩响应所支持的HTTP最低版本</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_http_version</span><span class="space"> </span><span>1.1;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>设置触发压缩的最小阈值</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_min_length</span><span class="space"> </span><span>2k;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>关闭对后端服务器的响应结果进行压缩</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>gzip_proxied</span><span class="space"> </span><span>off;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx缓冲区" tabindex="-1"><a class="header-anchor" href="#nginx缓冲区"><span><strong>Nginx缓冲区</strong></span></a></h3><p>先来思考一个问题，接入Nginx的项目一般请求流程为：“客户端→Nginx→服务端”，在这个过程中存在两个连接：“客户端→Nginx、Nginx→服务端”，那么两个不同的连接速度不一致，就会影响用户的体验（比如浏览器的加载速度跟不上服务端的响应速度）。</p><p>其实也就类似电脑的内存跟不上CPU速度，所以对于用户造成的体验感极差，因此在CPU设计时都会加入三级高速缓冲区，用于缓解CPU和内存速率不一致的矛盾。在Nginx也同样存在缓冲区的机制，主要目的就在于：<strong>「「用来解决两个连接之间速度不匹配造成的问题」」</strong> ，有了缓冲后，Nginx代理可暂存后端的响应，然后按需供给数据给客户端。先来看看一些关于缓冲区的配置项：</p><ul><li><p>proxy_buffering：是否启用缓冲机制，默认为on关闭状态。</p></li><li><p>client_body_buffer_size：设置缓冲客户端请求数据的内存大小。</p></li><li><p>proxy_buffers：为每个请求/连接设置缓冲区的数量和大小，默认4 4k/8k。</p></li><li><p>proxy_buffer_size：设置用于存储响应头的缓冲区大小。</p></li><li><p>proxy_busy_buffers_size：在后端数据没有完全接收完成时，Nginx可以将busy状态的缓冲返回给客户端，该参数用来设置busy状态的buffer具体有多大，默认为proxy_buffer_size*2。</p></li><li><p>proxy_temp_path：当内存缓冲区存满时，可以将数据临时存放到磁盘，该参数是设置存储缓冲数据的目录。</p></li><li><p>path是临时目录的路径。</p></li><li><p>语法：proxy_temp_path path; path是临时目录的路径</p></li><li><p>proxy_temp_file_write_size：设置每次写数据到临时文件的大小限制。</p></li><li><p>proxy_max_temp_file_size：设置临时的缓冲目录中允许存储的最大容量。</p></li><li><p>非缓冲参数项：</p></li><li><p>proxy_connect_timeout：设置与后端服务器建立连接时的超时时间。</p></li><li><p>proxy_read_timeout：设置从后端服务器读取响应数据的超时时间。</p></li><li><p>proxy_send_timeout：设置向后端服务器传输请求数据的超时时间。</p></li></ul><p>具体的nginx.conf配置如下：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>http{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_connect_timeout</span><span class="space"> </span><span>10;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_read_timeout</span><span class="space"> </span><span>120;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_send_timeout</span><span class="space"> </span><span>10;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_buffering</span><span class="space"> </span><span>on;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>client_body_buffer_size</span><span class="space"> </span><span>512k;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_buffers</span><span class="space"> </span><span>4</span><span class="space"> </span><span>64k;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_buffer_size</span><span class="space"> </span><span>16k;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_busy_buffers_size</span><span class="space"> </span><span>128k;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_temp_file_write_size</span><span class="space"> </span><span>128k;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_temp_path</span><span class="space"> </span><span>/soft/nginx/temp_buffer;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述的缓冲区参数，是基于每个请求分配的空间，而并不是所有请求的共享空间。当然，具体的参数值还需要根据业务去决定，要综合考虑机器的内存以及每个请求的平均数据大小。</p><p>“最后提一嘴：使用缓冲也可以减少即时传输带来的带宽消耗。</p><h3 id="nginx缓存机制" tabindex="-1"><a class="header-anchor" href="#nginx缓存机制"><span><strong>Nginx缓存机制</strong></span></a></h3><p>对于性能优化而言，缓存是一种能够大幅度提升性能的方案，因此几乎可以在各处都能看见缓存，如客户端缓存、代理缓存、服务器缓存等等，Nginx的缓存则属于代理缓存的一种。对于整个系统而言，加入缓存带来的优势额外明显：</p><ul><li>减少了再次向后端或文件服务器请求资源的带宽消耗。</li><li>降低了下游服务器的访问压力，提升系统整体吞吐。</li><li>缩短了响应时间，提升了加载速度，打开页面的速度更快。</li></ul><p>那么在Nginx中，又该如何配置代理缓存呢？先来看看缓存相关的配置项：</p><p><strong>「proxy_cache_path」</strong>：代理缓存的路径。</p><p>语法：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>proxy_cache_path</span><span class="space"> </span><span>path</span><span class="space"> </span><span>[levels=levels]</span><span class="space"> </span><span>[use_temp_path=on|off]</span><span class="space"> </span><span>keys_zone=name:size</span><span class="space"> </span><span>[inactive=time]</span><span class="space"> </span><span>[max_size=size]</span><span class="space"> </span><span>[manager_files=number]</span><span class="space"> </span><span>[manager_sleep=time]</span><span class="space"> </span><span>[manager_threshold=time]</span><span class="space"> </span><span>[loader_files=number]</span><span class="space"> </span><span>[loader_sleep=time]</span><span class="space"> </span><span>[loader_threshold=time]</span><span class="space"> </span><span>[purger=on|off]</span><span class="space"> </span><span>[purger_files=number]</span><span class="space"> </span><span>[purger_sleep=time]</span><span class="space"> </span><span>[purger_threshold=time];</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解释一下每个参数项的含义：</p><ul><li>path：缓存的路径地址。</li><li>levels：缓存存储的层次结构，最多允许三层目录。</li><li>use_temp_path：是否使用临时目录。</li><li>keys_zone：指定一个共享内存空间来存储热点Key(1M可存储8000个Key)。</li><li>inactive：设置缓存多长时间未被访问后删除（默认是十分钟）。</li><li>max_size：允许缓存的最大存储空间，超出后会基于LRU算法移除缓存，Nginx会创建一个Cache manager的进程移除数据，也可以通过purge方式。</li><li>manager_files：manager进程每次移除缓存文件数量的上限。</li><li>manager_sleep：manager进程每次移除缓存文件的时间上限。</li><li>manager_threshold：manager进程每次移除缓存后的间隔时间。</li><li>loader_files：重启Nginx载入缓存时，每次加载的个数，默认100。</li><li>loader_sleep：每次载入时，允许的最大时间上限，默认200ms。</li><li>loader_threshold：一次载入后，停顿的时间间隔，默认50ms。</li><li>purger：是否开启purge方式移除数据。</li><li>purger_files：每次移除缓存文件时的数量。</li><li>purger_sleep：每次移除时，允许消耗的最大时间。</li><li>purger_threshold：每次移除完成后，停顿的间隔时间。</li></ul><p>常见缓存配置</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>http{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>设置缓存的目录，并且内存中缓存区名为hot_cache，大小为128m，</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>三天未被访问过的缓存自动清楚，磁盘中缓存的最大容量为2GB。</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_path</span><span class="space"> </span><span>/soft/nginx/cache</span><span class="space"> </span><span>levels=1:2</span><span class="space"> </span><span>keys_zone=hot_cache:128m</span><span class="space"> </span><span>inactive=3d</span><span class="space"> </span><span>max_size=2g;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>server{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>location</span><span class="space"> </span><span>/</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>使用名为nginx_cache的缓存空间</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache</span><span class="space"> </span><span>hot_cache;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>对于200、206、304、301、302状态码的数据缓存1天</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_valid</span><span class="space"> </span><span>200</span><span class="space"> </span><span>206</span><span class="space"> </span><span>304</span><span class="space"> </span><span>301</span><span class="space"> </span><span>302</span><span class="space"> </span><span>1d;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>对于其他状态的数据缓存30分钟</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_valid</span><span class="space"> </span><span>any</span><span class="space"> </span><span>30m;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>定义生成缓存键的规则（请求的url+参数作为key）</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_key</span><span class="space"> </span><span>$host$uri$is_args$args;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>资源至少被重复访问三次后再加入缓存</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_min_uses</span><span class="space"> </span><span>3;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>出现重复请求时，只让一个去后端读数据，其他的从缓存中读取</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_lock</span><span class="space"> </span><span>on;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>上面的锁超时时间为3s，超过3s未获取数据，其他请求直接去后端</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_cache_lock_timeout</span><span class="space"> </span><span>3s;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>对于请求参数或cookie中声明了不缓存的数据，不再加入缓存</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>proxy_no_cache</span><span class="space"> </span><span>$cookie_nocache</span><span class="space"> </span><span>$arg_nocache</span><span class="space"> </span><span>$arg_comment;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>在响应头中添加一个缓存是否命中的状态（便于调试）</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>Cache-status</span><span class="space"> </span><span>$upstream_cache_status;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下</p><p><img src="`+d+`" alt="img"></p><p>第一次访问时，因为还没有请求过资源，所以缓存中没有数据，因此没有命中缓存。第二、三次，依旧没有命中缓存，直至第四次时才显示命中，这是为什么呢？因为在前面的缓存配置中，我们配置了加入缓存的最低条件为：<strong>「「资源至少要被请求三次以上才会加入缓存。」」</strong> 这样可以避免很多无效缓存占用空间。</p><h5 id="缓存清理" tabindex="-1"><a class="header-anchor" href="#缓存清理"><span><strong>缓存清理</strong></span></a></h5><p>当缓存过多时，如果不及时清理会导致磁盘空间被“吃光”，因此我们需要一套完善的缓存清理机制去删除缓存，在之前的proxy_cache_path参数中有purger相关的选项，开启后可以帮我们自动清理缓存，但遗憾的是：<strong>purger系列参数只有商业版的NginxPlus才能使用，因此需要付费才可使用。</strong></p><p>不过天无绝人之路，我们可以通过强大的第三方模块ngx_cache_purge来替代，先来安装一下该插件：①首先去到Nginx的安装目录下，创建一个cache_purge</p><h3 id="nginx实现ip黑白名单" tabindex="-1"><a class="header-anchor" href="#nginx实现ip黑白名单"><span><strong>Nginx实现IP黑白名单</strong></span></a></h3><p>有时候往往有些需求，可能某些接口只能开放给对应的合作商，或者购买/接入API的合作伙伴，那么此时就需要实现类似于IP白名单的功能。而有时候有些恶意攻击者或爬虫程序，被识别后需要禁止其再次访问网站，因此也需要实现IP黑名单。那么这些功能无需交由后端实现，可直接在Nginx中处理。</p><p>Nginx做黑白名单机制，主要是通过allow、deny配置项来实现：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>allow</span><span class="space"> </span><span>xxx.xxx.xxx.xxx;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许指定的IP访问，可以用于实现白名单。</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>deny</span><span class="space"> </span><span>xxx.xxx.xxx.xxx;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>禁止指定的IP访问，可以用于实现黑名单。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>要同时屏蔽/开放多个IP访问时，如果所有IP全部写在nginx.conf文件中定然是不显示的，这种方式比较冗余，那么可以新建两个文件BlocksIP.conf、WhiteIP.conf：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>#</span><span class="space"> </span><span>--------黑名单：BlocksIP.conf---------</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>deny</span><span class="space"> </span><span>192.177.12.222;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>屏蔽192.177.12.222访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>deny</span><span class="space"> </span><span>192.177.44.201;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>屏蔽192.177.44.201访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>deny</span><span class="space"> </span><span>127.0.0.0/8;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>屏蔽127.0.0.1到127.255.255.254网段中的所有IP访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>#</span><span class="space"> </span><span>--------白名单：WhiteIP.conf---------</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>allow</span><span class="space"> </span><span>192.177.12.222;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许192.177.12.222访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>allow</span><span class="space"> </span><span>192.177.44.201;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许192.177.44.201访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>allow</span><span class="space"> </span><span>127.45.0.0/16;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许127.45.0.1到127.45.255.254网段中的所有IP访问</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>deny</span><span class="space"> </span><span>all;</span><span class="space"> </span><span>#</span><span class="space"> </span><span>除开上述IP外，其他IP全部禁止访问</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以再将这两个文件在nginx.conf中导入：</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>http{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>屏蔽该文件中的所有IP</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>include</span><span class="space"> </span><span>/soft/nginx/IP/BlocksIP.conf;</span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span>server{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>location</span><span class="space"> </span><span>xxx</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>某一系列接口只开放给白名单中的IP</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>include</span><span class="space"> </span><span>/soft/nginx/IP/blockip.conf;</span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx跨域配置" tabindex="-1"><a class="header-anchor" href="#nginx跨域配置"><span><strong>Nginx跨域配置</strong></span></a></h3><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>location</span><span class="space"> </span><span>/</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许跨域的请求，可以自定义变量$http_origin，*表示所有</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Allow-Origin&#39;</span><span class="space"> </span><span>*;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许携带cookie请求</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Allow-Credentials&#39;</span><span class="space"> </span><span>&#39;true&#39;;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许跨域请求的方法：GET,POST,OPTIONS,PUT</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Allow-Methods&#39;</span><span class="space"> </span><span>&#39;GET,POST,OPTIONS,PUT&#39;;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许请求时携带的头部信息，*表示所有</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Allow-Headers&#39;</span><span class="space"> </span><span>*;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>允许发送按段获取资源的请求</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Expose-Headers&#39;</span><span class="space"> </span><span>&#39;Content-Length,Content-Range&#39;;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>一定要有！！！否则Post请求无法进行跨域！</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>在发送Post跨域请求前，会以Options方式发送预检请求，服务器接受时才会正式请求</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>if</span><span class="space"> </span><span>($request_method</span><span class="space"> </span><span>=</span><span class="space"> </span><span>&#39;OPTIONS&#39;)</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Access-Control-Max-Age&#39;</span><span class="space"> </span><span>1728000;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Content-Type&#39;</span><span class="space"> </span><span>&#39;text/plain;</span><span class="space"> </span><span>charset=utf-8&#39;;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>add_header</span><span class="space"> </span><span>&#39;Content-Length&#39;</span><span class="space"> </span><span>0;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>对于Options方式的请求返回204，表示接受跨域请求</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span>204;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx防盗链设计" tabindex="-1"><a class="header-anchor" href="#nginx防盗链设计"><span><strong>Nginx防盗链设计</strong></span></a></h3><p><strong>盗链即是指外部网站引入当前网站的资源对外展示</strong></p><p>“好比壁纸网站X站、Y站，X站是一点点去购买版权、签约作者的方式，从而积累了海量的壁纸素材，但Y站由于资金等各方面的原因，就直接通过 img src=&quot;X站/xxx.jpg&quot; /这种方式照搬了X站的所有壁纸资源，继而提供给用户下载。</p><p>Nginx的防盗链机制实现，跟一个头部字段：Referer有关，该字段主要描述了当前请求是从哪儿发出的，那么在Nginx中就可获取该值，然后判断是否为本站的资源引用请求，如果不是则不允许访问。Nginx中存在一个配置项为valid_referers，正好可以满足前面的需求</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>valid_referers</span><span class="space"> </span><span>none</span><span class="space"> </span><span>|</span><span class="space"> </span><span>blocked</span><span class="space"> </span><span>|</span><span class="space"> </span><span>server_names</span><span class="space"> </span><span>|</span><span class="space"> </span><span>string</span><span class="space"> </span><span>...;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>none：表示接受没有Referer字段的HTTP请求访问。</li><li>blocked：表示允许http://或https//以外的请求访问。</li><li>server_names：资源的白名单，这里可以指定允许访问的域名。</li><li>string：可自定义字符串，支配通配符、正则表达式写法。</li></ul><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>#</span><span class="space"> </span><span>在动静分离的location中开启防盗链机制</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>location</span><span class="space"> </span><span>~</span><span class="space"> </span><span>.*\\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css){</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>最后面的值在上线前可配置为允许的域名地址</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>valid_referers</span><span class="space"> </span><span>blocked</span><span class="space"> </span><span>192.168.12.129;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>if</span><span class="space"> </span><span>($invalid_referer)</span><span class="space"> </span><span>{</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>可以配置成返回一张禁止盗取的图片</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>rewrite</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>^/</span><span class="space"> </span><span>http://xx.xx.com/NO.jpg;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>#</span><span class="space"> </span><span>也可直接返回403</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>return</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>403;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>}</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>root</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>/soft/nginx/static_resources;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>expires</span><span class="space"> </span><span>7d;</span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx大文件传输配置" tabindex="-1"><a class="header-anchor" href="#nginx大文件传输配置"><span><strong>Nginx大文件传输配置</strong></span></a></h3><p>在某些业务场景中需要传输一些大文件，但大文件传输时往往都会会出现一些Bug，比如文件超出限制、文件传输过程中请求超时等，那么此时就可以在Nginx稍微做一些配置，先来了解一些关于大文件传输时可能会用的配置项：</p><p>在传输大文件时，client_max_body_size、client_header_timeout、proxy_read_timeout、proxy_send_timeout这四个参数值都可以根据自己项目的实际情况来配置。</p><p><img src="`+t+'" alt="img"></p>',79)]))}const m=a(r,[["render",o],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/article/8zh2ad76/","title":"nginx","lang":"zh-CN","frontmatter":{"title":"nginx","createTime":"2024/02/27 21:55:50","permalink":"/article/8zh2ad76/"},"headers":[],"readingTime":{"minutes":14.63,"words":4389},"git":{"updatedTime":1742544334000,"contributors":[{"name":"hello-xiaowu","username":"hello-xiaowu","email":"mvr46tx2fw@privaterelay.appleid.com","commits":3,"avatar":"https://avatars.githubusercontent.com/hello-xiaowu?v=4","url":"https://github.com/hello-xiaowu"}]},"filePathRelative":"docs/nginx.md","categoryList":[{"id":"e3e2a9","sort":10000,"name":"docs"}]}');export{m as comp,g as data};
